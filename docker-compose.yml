version: "3"

services:

  nginx:
    build: docker/nginx
    container_name: ${APP_NAME}_nginx
    working_dir: /var/www/html
    ports:
      - "8080:80"
    networks:
      internal:
        aliases: [www]
    volumes:
      - ./:/var/www/html/
      - ./docker/logs/nginx:/var/log/nginx/
    depends_on:
      - php-fpm
      - mysql

  php-fpm:
    build: docker/php-fpm
    container_name: ${APP_NAME}_php_fpm
    restart: on-failure
    volumes:
      - ./:/var/www/html/
    working_dir: /var/www/html/
#    ports:
#      - "9000:9000"
    networks:
      - internal
    environment:
      - PHP_CS_FIXER_IGNORE_ENV=1

  mysql:
    build: docker/mysql
    container_name: ${APP_NAME}_project_mysql_81
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    command: mysqld --sql_mode="STRICT_TRANS_TABLES" --general_log_file="/var/log/mysql/mysql.log" --general_log=1
    volumes:
      - laravel-blog-mysql-adatok:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - internal

  laravel-worker-1:
      build: docker/php-fpm
      container_name: ${APP_NAME}_laravel-worker-1
      restart: unless-stopped
      volumes:
          - ./:/var/www/html/
      working_dir: /var/www/html/
      # production-ben ez ne legyen kikommentelve!
      #      command: php artisan queue:work --tries=1 --queue=high,normal,low --sleep=3
      networks:
          - internal

networks:
  internal:
      name: ${APP_DOMAIN}

volumes:
  laravel-blog-mysql-adatok:
